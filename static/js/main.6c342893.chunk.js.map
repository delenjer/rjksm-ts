{"version":3,"sources":["store/artCollectionsReducer/index.ts","store/artCollectionsReducer/actions.ts","store/loadingArtItemsReducer/index.ts","store/loadingArtItemsReducer/actions.ts","store/btnListReducer/index.ts","store/btnListReducer/actions.ts","store/loadReducer/actions.ts","store/loadReducer/index.ts","store/infoReducer/actions.ts","store/infoReducer/index.ts","store/favoriteReducer/actions.ts","store/favoriteReducer/index.ts","store/favoriteListReducer/actions.ts","store/favoriteListReducer/index.ts","store/modalWindowReduser/actions.ts","store/modalWindowReduser/index.ts","store/errorMessageReducer/actions.ts","store/errorMessageReducer/index.ts","store/store.ts","components/LazyLoadingImg/LazyLoadingImg.tsx","api/api.ts","store/thunk/thunk.ts","components/ArtCollectionsItem/ArtCollectionsItem.tsx","components/ArtCollectionsList/ArtCollectionsList.tsx","components/ArtCollections/ArtCollections.tsx","components/ResultSearchOrSort/ResultSearchOrSort.tsx","components/Header/Header.tsx","components/ModalWindow/ModalWindow.tsx","components/Footer/Footer.tsx","components/Home/Home.tsx","components/Details/Details.tsx","components/Favorite/Favorite.tsx","App.tsx","index.tsx"],"names":["artCollectionsReducer","artCollections","action","type","artItem","initialState","pageSize","totalPicturesCount","currentPage","query","selectValue","loadingArtItemsReducer","state","num","console","log","title","value","btnList","btnText","btnListReducer","text","setLoading","isLoading","loadReducer","setInfo","data","infoReducer","info","setFavorite","id","favoriteReducer","favorite","setFavoriteItem","addNewFavorite","favoriteListReducer","favoriteList","setActionModal","isAction","modalWindowReducer","isActiveModal","setError","isError","errorMessageReducer","getFavoriteList","isFavoriteList","getFavorite","isFavorite","getInfo","getIsLoading","getArtCollections","rootReducer","combineReducers","loadingArtItems","store","createStore","composeWithDevTools","applyMiddleware","thunk","LazyLoadingImg","className","src","alt","instance","axios","create","responseType","loadingArtCollections","dispatch","get","then","resp","a","loadInfo","infoId","catch","ArtCollectionsItem","art","useState","isLoadingImg","setLoadingImg","highSrc","headerImage","url","useSelector","selectors","useDispatch","artObjects","useEffect","loadHighSrc","imageSrc","lazyImage","Image","onload","onClick","e","preventDefault","hasLike","findIndex","item","filter","objectNumber","map","webImage","handleFavoriteClick","includes","to","style","backgroundImage","handleClickModal","longTitle","ArtCollectionsList","length","key","ArtCollections","totalCount","count","ResultSearchOrSort","handleSubmit","handleSelect","isQuery","setQuery","name","onChange","onSubmit","placeholder","target","Header","ModalWindow","artObject","handleClickCloseModal","description","Footer","buttonList","forEach","innerHTML","classList","add","remove","pagesCount","Math","ceil","document","querySelectorAll","handleLoadItem","handlerGetButtonText","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page","selected","handlePageClick","containerClassName","subContainerClassName","activeClassName","initialPage","Home","Details","principalMakers","detail","dateOfBirth","dateOfDeath","dating","presentingDate","physicalMedium","label","Favorite","handleDeleteFavorite","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"4QAeeA,EAVe,WAAwD,IAAvDC,EAAsD,uDAArC,GAAIC,EAAiC,uCACnF,OAAQA,EAAOC,MACb,ICL+B,sBDM7B,OAAOD,EAAOE,QAEhB,QACE,OAAOH,I,OEFPI,EAAe,CACnBC,SAAU,GACVC,mBAAoB,KACpBC,YAAa,EACbC,MAAO,GACPC,YAAa,IA2CAC,EAtCgB,WAAyD,IAAxDC,EAAuD,uDAA/CP,EAAcH,EAAiC,uCACrF,OAAQA,EAAOC,MACb,ICrB4B,mBDsB1B,OAAO,2BACFS,GADL,IAEEJ,YAAaN,EAAOW,MAGxB,IC1B2B,kBD4BzB,OADAC,QAAQC,IAAIb,EAAOW,KACZ,2BACFD,GADL,IAEEL,mBAAoBL,EAAOW,MAG/B,IChCyB,gBDiCvB,OAAO,2BACFD,GADL,IAEEN,SAAUJ,EAAOW,MAGrB,ICrCwB,eDsCtB,OAAO,2BACFD,GADL,IAEEH,MAAOP,EAAOc,QAGlB,IC1C4B,mBD2C1B,OAAO,2BACFJ,GADL,IAEEF,YAAaR,EAAOe,QAGxB,QACE,OAAOL,IEnDPP,EAAe,CACnBa,QAAS,GACTC,QAAS,IAwBIC,EAnBQ,WAAuC,IAAtCR,EAAqC,uDAA7BP,EAAcH,EAAe,uCAC3D,OAAQA,EAAOC,MACb,ICX2B,kBDYzB,OAAO,2BACFS,GADL,IAEEM,QAAShB,EAAOgB,UAGpB,IChB2B,kBDiBzB,OAAO,2BACFN,GADL,IAEEO,SAAUjB,EAAOmB,OAGrB,QACE,OAAOT,IEtBAU,EAAa,SAACC,GAAD,MAAyB,CACjDpB,KAHyB,cAIzBoB,cCWaC,EAVK,WAAiD,IAAhDD,EAA+C,wDAA5BrB,EAA4B,uCAClE,OAAQA,EAAOC,MACb,IDPuB,cCQrB,OAAOD,EAAOqB,UAEhB,QACE,OAAOA,ICTAE,EAAU,SAACC,GAAD,MAAgB,CACrCvB,KAHsB,WAItBuB,SCWaC,EAVK,WAA8B,IAA7BC,EAA4B,uDAArB,GAAI1B,EAAiB,uCAC/C,OAAQA,EAAOC,MACb,IDPoB,WCQlB,OAAOD,EAAOwB,KAEhB,QACE,OAAOE,ICTAC,EAAc,SAACC,GAAD,MAAmB,CAC5C3B,KAH0B,eAI1B2B,OCWaC,EAVS,WAAgD,IAA/CC,EAA8C,uDAAzB,GAAI9B,EAAqB,uCACrE,OAAQA,EAAOC,MACb,IDPwB,eCQtB,OAAOD,EAAO4B,GAEhB,QACE,OAAOE,ICPAC,EAAkB,SAACC,GAAD,MAAwC,CACrE/B,KAHkC,uBAIlC+B,mBCSaC,EAVa,WAA2D,IAA1DC,EAAyD,uDAAzB,GAAIlC,EAAqB,uCACpF,OAAQA,EAAOC,MACb,IDLgC,uBCM9B,OAAOD,EAAOgC,eAEhB,QACE,OAAOE,ICTAC,EAAiB,SAACC,GAAD,MAAwB,CACpDnC,KAHwB,aAIxBmC,aCWaC,EAVY,WAAiD,IAAhDC,EAA+C,wDAAxBtC,EAAwB,uCACzE,OAAQA,EAAOC,MACb,IDPsB,aCQpB,OAAOD,EAAOoC,SAEhB,QACE,OAAOE,ICTAC,EAAW,SAACC,GAAD,MAAuB,CAC7CvC,KAHuB,YAIvBuC,YCWaC,EAVa,WAA4C,IAA3CD,EAA0C,wDAAzBxC,EAAyB,uCACrE,OAAQA,EAAOC,MACb,IDPqB,YCQnB,OAAOD,EAAOwC,QAEhB,QACE,OAAOA,ICWAE,EAAkB,SAAChC,GAAD,OACZA,EAAMiC,gBAEZC,EAAc,SAAClC,GAAD,OAAiDA,EAAMmC,YAErEC,EAAU,SAACpC,GAAD,OACZA,EAAMgB,MAEJqB,EAAe,SAACrC,GAAD,OACZA,EAAMW,WAiBT2B,EAAoB,SAACtC,GAAD,OACZA,EAAMX,gBAErBkD,EAAcC,0BAAgB,CAClCnD,eAAgBD,EAChBqD,gBAAiB1C,EACjBO,QAASE,EACTG,UAAWC,EACXI,KAAMD,EACNoB,WAAYhB,EACZc,eAAgBV,EAChBK,cAAeD,EACfG,QAASC,IAOIW,EAJDC,sBAAYJ,EAAaK,8BACrCC,0BAAgBC,O,uBC9DLC,EAA2B,kBACtC,yBACEC,UAAU,WACVC,IAAI,oBACJC,IAAI,qB,iCCFFC,E,OAAWC,EAAMC,OAAO,CAC5BC,aAAc,SCCHC,EAAwB,SAAC3D,EAAqBF,EAAkBG,EAAeC,GAC1F,OAAO,SAAC0D,GACNA,EAAS9C,GAAW,IDAS,SAC/Bd,EACAF,EACAG,EACAC,GAJ+B,OAK5BqD,EACFM,IADE,UAXY,4DAWZ,cACmB3D,EADnB,eACqCJ,EADrC,cACmDE,EADnD,0BACgFC,IAClF6D,MAAK,SAAAC,GAAI,OAAIA,EAAK7C,QCNjBwB,CAAkB1C,EAAaF,EAAUG,EAAOC,GAC7C4D,KADH,uCACQ,WAAM5C,GAAN,SAAA8C,EAAA,kEACJJ,EADI,SpBNyD,CACnEjE,KAHiC,sBAIjCC,QoBKuCsB,GAD7B,kCAEJ0C,EAAS9C,GAAW,IAFhB,2CADR,yDAQSmD,EAAW,SAACC,GAAD,OAAoB,SAACN,IDAtB,SAACM,GAAD,OAAoBX,EACxCM,IADwC,uDACYK,EADZ,kBAExCJ,MAAK,SAAAC,GAAI,OAAIA,EAAK7C,SCAnBsB,CAAQ0B,GAAQJ,KAAhB,uCAAqB,WAAO5C,GAAP,SAAA8C,EAAA,kEACnBJ,EADmB,SACJ3C,EAAQC,GADJ,6EAArB,uDAGGiD,OAAM,WACPP,EAAS3B,GAAS,SCXTmC,EAAqC,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACvBC,oBAAS,GADc,mBACtDC,EADsD,KACxCC,EADwC,KAEvDC,EAAUJ,EAAIK,YAAYC,IAC1BrC,EAAcsC,aAAY,SAACxE,GAAD,OAAkByE,EAAsBzE,MAClEgC,EAAkBwC,aAAY,SAACxE,GAAD,OAAkByE,EAA0BzE,MAC1EX,EAAiBmF,aAAY,SAACxE,GAAD,OAAkByE,EAA4BzE,MAC3EwD,EAAWkB,cACTC,EAAetF,EAAfsF,WAERC,qBAAU,WACRC,EAAYR,KACX,CAACA,IAEJ,IAAMQ,EAAc,SAACC,GACnB,IAAMC,EAAY,IAAIC,MAEtBD,EAAUE,OAAS,WACjBb,GAAc,IAGhBW,EAAU9B,IAAM6B,GAoClB,OACE,oCAEIX,EACE,6BAASnB,UAAU,oBACjB,4BACEA,UAAU,eACVkC,QAAS,SAACC,GAAD,OAxCO,SAACA,EAAwCjE,GACnEiE,EAAEC,iBAEF,IAAMC,EAAUnD,EAAYoD,WAAU,SAACC,GAAD,OAAkBA,IAASrE,KAG/DsC,EAASvC,GADM,IAAboE,EACmB,GAAD,mBAAKnD,GAAL,CAAkBhB,IAEjB,YAAIgB,EAAYsD,QAAO,SAACD,GAAD,OAAkBA,IAASrE,QAGzE,IAAMd,EAAQuE,EAAWa,QAAO,SAACD,GAAD,OAAuBA,EAAKE,eAAiBvE,KAC1EwE,KAAI,SAAAH,GAAI,OAAIA,EAAKnF,SAEdmE,EAAMI,EAAWa,QAAO,SAACD,GAAD,OAAuBA,EAAKE,eAAiBvE,KACxEwE,KAAI,SAAAH,GAAI,OAAIA,EAAKI,SAASpB,OAEvBjD,EAAiB,CACrBJ,KACAd,QACAmE,OAGFf,EAASnC,EAAgB,GAAD,mBAAKW,GAAL,CAAsBV,MAkBlCsE,CAAoBT,EAAGlB,EAAIwB,gBAI3BvD,EAAY2D,SAAS5B,EAAIwB,cACvB,0BAAMzC,UAAU,+BAEhB,0BAAMA,UAAU,gBAKtB,kBAAC,IAAD,CACE8C,GAAG,IACH9C,UAAU,mBACV+C,MAAO,CAAEC,gBAAgB,OAAD,OAAS3B,EAAT,MACxBa,QAAS,SAACC,GAAD,OA/BI,SAACA,EAAoDjE,GAC5EiE,EAAEC,iBAEF5B,EAAS/B,GAAe,IACxB+B,EAASK,EAAS3C,IA2BQ+E,CAAiBd,EAAGlB,EAAIwB,gBAExC,uBAAGzC,UAAU,oBAAoBiB,EAAIiC,aAIzC,kBAAC,EAAD,QCzFGC,EAAoD,SAAC,GAAwB,IAChFxB,EAD+E,EAArBtF,eAC1DsF,WAER,OACE,6BAAS3B,UAAU,cAEf2B,IAAeA,EAAWyB,OACxB,uBAAGpD,UAAU,iBAAb,6CAEA,yBAAKA,UAAU,oBAEX2B,GAAcA,EAAWe,KAAI,SAAAzB,GAAG,OAC9B,kBAAC,EAAD,CAAoBoC,IAAKpC,EAAI/C,GAAI+C,IAAKA,UCbzCqC,EAAiB,WAC5B,IAAMjH,EAAiBmF,aAAY,SAACxE,GAAD,OAAkByE,EAA4BzE,MAC3EW,EAAY6D,aAAY,SAACxE,GAAD,OAAkByE,EAAuBzE,MAEjEwD,EAAWkB,cASjB,OAPAE,qBAAU,WACR,IAAM2B,EAAalH,EAAemH,MAJH,QAIiEnH,EAAemH,MAE/GhD,ErBN2C,CAC7CjE,KAX6B,kBAY7BU,IqBIyBsG,MAEtB,CAAClH,IAGF,oCAEKsB,EAKC,yBAAKqC,UAAU,cACb,yBAAKA,UAAU,UAAf,eALF,0BAAMA,UAAU,WACd,kBAAC,EAAD,CAAoB3D,eAAgBA,OCjBnCoH,EAAwD,SAAC,GAAD,IAEjEC,EAFiE,EAEjEA,aACAC,EAHiE,EAGjEA,aACAC,EAJiE,EAIjEA,QACAC,EALiE,EAKjEA,SALiE,OAOnE,6BAAS7D,UAAU,WACjB,4BACE8D,KAAK,IACL9D,UAAU,cACV+D,SAAU,SAAC5B,GAAD,OAAOwB,EAAaxB,KAE9B,4BAAQ9E,MAAM,IAAd,aACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,cAAd,eACA,4BAAQA,MAAM,eAAd,qBAA+C,IAA/C,SAGF,0BACEf,OAAO,IACP0H,SAAU,SAAC7B,GAAD,OAAOuB,EAAavB,IAC9BnC,UAAU,QAEV,2BACEzD,KAAK,OACL0H,YAAY,oBACZ5G,MAAOuG,EACPG,SAAU,SAAC5B,GAAD,OAAO0B,EAAS1B,EAAE+B,OAAO7G,QACnC2C,UAAU,gBAGZ,4BACEzD,KAAK,SACLyD,UAAU,gBAFZ,aChCOmE,EAAS,WAAO,IAAD,EACEjD,mBAAS,IADX,mBACnB0C,EADmB,KACVC,EADU,KAEpB3E,EAAcsC,aAAY,SAACxE,GAAD,OAAkByE,EAAsBzE,MAClEwD,EAAWkB,cAajB,OACE,4BAAQ1B,UAAU,UAChB,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAM8C,GAAG,IAAI9C,UAAU,gBAAvB,eAEA,kBAAC,EAAD,CACE0D,aAjBa,SAACvB,GACpBA,EAAEC,iBAEF5B,EvBIyC,CAC3CjE,KAnB0B,eAoB1Ba,MuBNqBwG,IACnBC,EAAS,KAcHF,aAXa,SAACxB,GACpB3B,EvBI8C,CAChDjE,KAvB8B,mBAwB9Bc,MuBN0B8E,EAAE+B,OAAO7G,SAW3BwG,SAAUA,EACVD,QAASA,IAGX,kBAAC,IAAD,CAAMd,GAAG,YAAY9C,UAAU,gBAC7B,0BAAMA,UAAU,uBACbd,EAAYkE,YC9BZgB,EAAc,WACzB,IAAMpG,EAAOwD,aAAY,SAACxE,GAAD,OAAkByE,EAAkBzE,MACvD4B,EAAgB4C,aAAY,SAACxE,GAAD,OTQN,SAACA,GAAD,OACZA,EAAM4B,cST8B6C,CAAyBzE,MACvE8B,EAAU0C,aAAY,SAACxE,GAAD,OTIN,SAACA,GAAD,OACZA,EAAM8B,QSL8B2C,CAAmBzE,MAC3DwD,EAAWkB,cACT2C,EAAcrG,EAAdqG,UAEFC,EAAwB,WAC5B9D,EAAS/B,GAAe,IACxB+B,EAAS3B,GAAS,KAGpB,OACE,oCACE,yBAAKmB,UAAWpB,EAAgB,kCAAoC,iBAClE,yBACEoB,UAAU,gBAGRlB,EACE,yBAAKkB,UAAU,iBACb,uBAAGA,UAAU,iBAAb,wBAIA,4BACEzD,KAAK,SACL2F,QAASoC,EACTtE,UAAU,cAHZ,UASFqE,GACE,6BAASrE,UAAU,SACjB,oCACE,6BAASA,UAAU,eACjB,yBACEC,IAAKoE,EAAU1B,SAASpB,IACxBrB,IAAI,MACJF,UAAU,eAGZ,wBAAIA,UAAU,gBAAgBqE,EAAUjH,OAExC,uBAAG4C,UAAU,sBACVqE,EAAUE,cAIf,yBAAKvE,UAAU,kBACb,yBAAKA,UAAU,2BACb,kBAAC,IAAD,CACE8C,GAAE,WACF9C,UAAU,wBACVkC,QAASoC,GAHX,YAME,6BANF,WAUA,4BACE/H,KAAK,SACL2F,QAASoC,EACTtE,UAAU,cAHZ,iB,oBC7DXwE,GAAmB,WAC9BhD,aAAY,SAACxE,GAAD,OVqBY,SAACA,GACzB,IAAMyH,EAAyCzH,EAAMM,QAErDmH,EAAWnH,QAAQoH,SAAQ,SAACnC,IACrBA,EAAKoC,YAAcF,EAAWlH,QACjCgF,EAAKqC,UAAUC,IAAI,cAEnBtC,EAAKqC,UAAUE,OAAO,iBU5BIrD,CAAqBzE,MACnD,IAAMW,EAAY6D,aAAY,SAACxE,GAAD,OAAkByE,EAAuBzE,MACjEyC,EAAkB+B,aAAY,SAACxE,GAAD,OV+BJ,SAACA,GAAD,OACZA,EAAMyC,gBUhC4BgC,CAA6BzE,MAC3EJ,EAAkE6C,EAAlE7C,YAAaF,EAAqD+C,EAArD/C,SAAUC,EAA2C8C,EAA3C9C,mBAAoBE,EAAuB4C,EAAvB5C,MAAOC,EAAgB2C,EAAhB3C,YACpD0D,EAAWkB,cACXqD,EAAaC,KAAKC,KAAKtI,EAAqBD,GAMlDkF,qBAAU,WACRpB,EAASD,EAAsB3D,EAAaF,EAAUG,EAAOC,MAC5D,CAACF,EAAaF,EAAUG,EAAOC,EAAaH,IAE/CiF,qBAAU,WACRpB,EvBzB4C,CAC9CjE,KAJ6B,kBAK7Be,QuBuByB4H,SAASC,iBAAiB,wBAChD,CAAC3E,IAEJ,IAAM4E,EAAiB,SAACjD,GAA2C,IACzDwC,EAAcxC,EAAE+B,OAAhBS,UAERnE,EzBlBgD,CAClDjE,KAf2B,gBAgB3BU,KyBgB+B0H,KAGzBU,EAAuB,SAAClD,GAA2C,IAC/DwC,EAAcxC,EAAE+B,OAAhBS,UAERnE,EvBhC4C,CAC9CjE,KAR6B,kBAS7BkB,KuB8ByBkH,KAGzB,OACE,oCACE,4BACE3E,UAAWrC,EAAY,gBAAkB,UAEzC,kBAAC,KAAD,CACE2H,cAAc,IACdC,UAAU,IACVC,WAAW,MACXC,eAAe,WACfC,UAAWX,EACXY,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAc,SAACC,GAAD,OArCE,SAACA,GACvBtF,EzBd4C,CAC9CjE,KAP8B,mBAQ9BU,IyBY0B6I,EAAKC,SAAW,IAoCaC,CAAgBF,IAC/DG,mBAAmB,aACnBC,sBAAsB,mBACtBC,gBAAgB,SAChBC,YAAaxJ,EAAc,IAG7B,yBAAKoD,UAAU,cACb,4BACEzD,KAAK,SACLyD,UAAU,6BACVkC,QAAS,SAACC,GACRiD,EAAejD,GACfkD,EAAqBlD,KALzB,MAWA,4BACE5F,KAAK,SACLyD,UAAU,kBACVkC,QAAS,SAACC,GACRiD,EAAejD,GACfkD,EAAqBlD,KALzB,MAWA,4BACE5F,KAAK,SACLyD,UAAU,kBACVkC,QAAS,SAACC,GACRiD,EAAejD,GACfkD,EAAqBlD,KALzB,WChFGkE,GAAO,kBAClB,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,QCJSC,GAAU,WACrB,IACQjC,EADK7C,aAAY,SAACxE,GAAD,OAAmByE,EAAkBzE,MACtDqH,UAER,OACE,6BAASrE,UAAU,WACjB,yBAAKA,UAAU,WAEVqE,EAaC,oCACE,kBAAC,IAAD,CACEvB,GAAG,IACH9C,UAAU,QAEV,0BAAMA,UAAU,yBAJlB,QAQA,wBAAIA,UAAU,kBAAkBqE,EAAUjH,OAE1C,wBAAI4C,UAAU,iBAEVqE,EAAUkC,gBAAgB7D,KAAI,SAAC8D,GAAD,OAC5B,yBAAKnD,IAAKmD,EAAOC,aACf,wBAAIzG,UAAU,iBACd,0BAAMA,UAAU,wBAAhB,WAIGwG,EAAO1C,MAGV,wBAAI9D,UAAU,iBACd,0BAAMA,UAAU,wBAAhB,mBAIGwG,EAAOC,YACP,MACAD,EAAOE,iBAKhB,wBAAI1G,UAAU,iBACd,0BAAMA,UAAU,wBAAhB,WAIGqE,EAAUsC,OAAOC,gBAGpB,wBAAI5G,UAAU,iBACd,0BAAMA,UAAU,wBAAhB,mBAIGqE,EAAUwC,iBAIf,6BAAS7G,UAAU,oBACjB,yBACEC,IAAKoE,EAAU1B,SAASpB,IACxBrB,IAAI,MACJF,UAAU,iBAGZ,uBAAGA,UAAU,wBACVqE,EAAUyC,MAAMvC,eAxEvB,oCACE,kBAAC,IAAD,CACEzB,GAAG,IACH9C,UAAU,QAEV,0BAAMA,UAAU,yBAJlB,QAQA,wBAAIA,UAAU,iBAAd,kBChBD+G,GAAW,WACtB,IAAM7H,EAAcsC,aAAY,SAACxE,GAAD,OAAkByE,EAAsBzE,MAClEgC,EAAkBwC,aAAY,SAACxE,GAAD,OAAkByE,EAA0BzE,MAC1EwD,EAAWkB,cAiBjB,OATAE,qBAAU,WACRpB,EACEnC,EAAgB,YACVW,EAAgBwD,QAAO,SAACD,GAAD,OAAerD,EACvC2D,SAASN,EAAKrE,YAGpB,IAGD,6BAAS8B,UAAU,YACjB,kBAAC,IAAD,CACE8C,GAAG,IACH9C,UAAU,uBAEV,0BAAMA,UAAU,yBAJlB,QAQEhB,EAAgBwD,QAAO,SAACD,GAAD,OAAcrD,EAAY2D,SAASN,EAAKrE,OAC5DwE,KAAI,SAACH,GAAD,OACJ,wBAAIvC,UAAU,iBAAiBqD,IAAKd,EAAKrE,IACtC,wBAAI8B,UAAU,kBACd,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mBAAmBuC,EAAKnF,OAEtC,4BACE4C,UAAU,gBACVzD,KAAK,SACL2F,QAAS,SAACC,GAAD,OAnCI,SAACA,EAAoDjE,GAChFiE,EAAEC,iBAEF5B,EAASvC,EAAY,YAAIiB,EAAYsD,QAAO,SAACD,GAAD,OAAeA,IAASrE,QAiCpD8I,CAAqB7E,EAAGI,EAAKrE,MAE/B,0BAAM8B,UAAU,iBAIpB,yBAAKA,UAAU,uBACb,yBACEA,UAAU,gBACVC,IAAG,UAAKsC,EAAKhB,KACbrB,IAAG,UAAKqC,EAAKnF,iBC1ChB6J,I,MAVH,kBACV,yBAAKjH,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkH,OAAK,EAACC,KAAK,IAAIC,UAAWf,KACjC,kBAAC,IAAD,CAAOc,KAAK,YAAYC,UAAWL,KACnC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWd,SCJxCe,IAASC,OACP,kBAAC,IAAD,CAAU5H,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJwF,SAASqC,eAAe,W","file":"static/js/main.6c342893.chunk.js","sourcesContent":["import { IActionArtCollections, IArtCollections } from '../../interface/interface';\nimport { SET_ART_COLLECTIONS } from './actions';\n\nexport const getArtCollections = (state: IArtCollections) => state;\n\nconst artCollectionsReducer = (artCollections = {}, action:IActionArtCollections) => {\n  switch (action.type) {\n    case SET_ART_COLLECTIONS:\n      return action.artItem;\n\n    default:\n      return artCollections;\n  }\n}\n\nexport default artCollectionsReducer;\n","import { IActionArtCollections } from '../../interface/interface';\n\nexport const SET_ART_COLLECTIONS = 'SET_ART_COLLECTIONS';\n\nexport const setArtCollections = (artItem:IActionArtCollections) => ({\n  type: SET_ART_COLLECTIONS,\n  artItem,\n});\n","import { IActionSetCurrentPage, ILoadingArtItems } from '../../interface/interface';\nimport {\n  SET_CURRENT_PAGE,\n  SET_TOTAL_COUNT,\n  SET_LOAD_ITEM,\n  SET_KEY_WORD,\n  SET_SELECT_VALUE\n} from './actions';\n\nconst initialState = {\n  pageSize: 10,\n  totalPicturesCount: null,\n  currentPage: 1,\n  query: '',\n  selectValue: '',\n};\n\nexport const getLoadingArtItems = (state: ILoadingArtItems) => state;\n\nconst loadingArtItemsReducer = (state = initialState, action:IActionSetCurrentPage) => {\n  switch (action.type) {\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.num,\n      };\n\n    case SET_TOTAL_COUNT:\n      console.log(action.num);\n      return {\n        ...state,\n        totalPicturesCount: action.num,\n      };\n\n    case SET_LOAD_ITEM:\n      return {\n        ...state,\n        pageSize: action.num,\n      };\n\n    case SET_KEY_WORD:\n      return {\n        ...state,\n        query: action.title,\n      };\n\n    case SET_SELECT_VALUE:\n      return {\n        ...state,\n        selectValue: action.value,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default loadingArtItemsReducer;\n","export const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nexport const SET_LOAD_ITEM = 'SET_LOAD_ITEM';\nexport const SET_KEY_WORD = 'SET_KEY_WORD';\nexport const SET_SELECT_VALUE = 'SET_SELECT_VALUE';\n\nexport const setCurrentPage = (num: number) => ({\n  type: SET_CURRENT_PAGE,\n  num,\n});\n\nexport const setTotalCount = (num: number) => ({\n  type: SET_TOTAL_COUNT,\n  num,\n});\n\nexport const setLoadItemsOnPage = (num: number) => ({\n  type: SET_LOAD_ITEM,\n  num,\n});\n\nexport const setSearch = (title: string) => ({\n  type: SET_KEY_WORD,\n  title,\n});\n\nexport const setSelectValue = (value: string) => ({\n  type: SET_SELECT_VALUE,\n  value,\n});\n","import { SET_BUTTON_LIST, SET_BUTTON_TEXT } from './actions';\n\nconst initialState = {\n  btnList: [],\n  btnText: 10,\n};\n\nexport const getBtnList = (state: any) => state;\n\nconst btnListReducer = (state = initialState, action:any) => {\n  switch (action.type) {\n    case SET_BUTTON_LIST:\n      return {\n        ...state,\n        btnList: action.btnList,\n      };\n\n    case SET_BUTTON_TEXT:\n      return {\n        ...state,\n        btnText: +action.text,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default btnListReducer;\n","export const SET_BUTTON_LIST = 'SET_BUTTON_LIST';\nexport const SET_BUTTON_TEXT = 'SET_BUTTON_TEXT';\n\nexport const setButtonList = (btnList: any) => ({\n  type: SET_BUTTON_LIST,\n  btnList,\n});\n\nexport const setButtonText = (text: string) => ({\n  type: SET_BUTTON_TEXT,\n  text,\n});\n","export const SET_LOADING = 'SET_LOADING';\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: SET_LOADING,\n  isLoading,\n});\n","import {IActionIsLoading} from '../../interface/interface';\nimport {SET_LOADING} from './actions';\n\nexport const getIsLoading = (state: boolean) => state;\n\nconst loadReducer = (isLoading = false, action:IActionIsLoading) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return action.isLoading;\n\n    default:\n      return isLoading;\n  }\n}\n\nexport default loadReducer;\n","export const SET_INFO = 'SET_INFO';\n\nexport const setInfo = (data: any) => ({\n  type: SET_INFO,\n  data,\n});\n","import { IInfo } from '../../interface/interface';\nimport { SET_INFO } from './actions';\n\nexport const getInfo = (state: any) => state;\n\nconst infoReducer = (info = [], action:IInfo) => {\n  switch (action.type) {\n    case SET_INFO:\n      return action.data;\n\n    default:\n      return info;\n  }\n};\n\nexport default infoReducer;\n","export const SET_FAVORITE = 'SET_FAVORITE';\n\nexport const setFavorite = (id: string[]) => ({\n  type: SET_FAVORITE,\n  id,\n});\n","import { IFavorite } from '../../interface/interface';\nimport { SET_FAVORITE } from './actions';\n\nexport const getFavorite = (state: string[]) => state;\n\nconst favoriteReducer = (favorite: string[] = [], action:IFavorite) => {\n  switch (action.type) {\n    case SET_FAVORITE:\n      return action.id;\n\n    default:\n      return favorite;\n  }\n}\n\nexport default favoriteReducer;\n","import { IFavoriteList } from '../../interface/interface';\n\nexport const SET_FAVORITE_CONTENT = 'SET_FAVORITE_CONTENT';\n\nexport const setFavoriteItem = (addNewFavorite: (IFavoriteList[])) => ({\n  type: SET_FAVORITE_CONTENT,\n  addNewFavorite,\n});\n","import { IFavorite, IFavoriteList } from '../../interface/interface';\nimport { SET_FAVORITE_CONTENT } from './actions';\n\nexport const getFavoriteList = (state: IFavoriteList[]) => state;\n\nconst favoriteListReducer = (favoriteList: IFavoriteList[] = [], action:IFavorite) => {\n  switch (action.type) {\n    case SET_FAVORITE_CONTENT:\n      return action.addNewFavorite;\n\n    default:\n      return favoriteList;\n  }\n}\n\nexport default favoriteListReducer;\n","export const SET_ACTION = 'SET_ACTION';\n\nexport const setActionModal = (isAction: boolean) => ({\n  type: SET_ACTION,\n  isAction,\n});\n","import { IActionModal } from '../../interface/interface';\nimport { SET_ACTION } from './actions';\n\nexport const getActiveModal = (state: boolean) => state;\n\nconst modalWindowReducer = (isActiveModal = false, action:IActionModal) => {\n  switch (action.type) {\n    case SET_ACTION:\n      return action.isAction;\n\n    default:\n      return isActiveModal;\n  }\n}\n\nexport default modalWindowReducer;\n","export const SET_ERROR = 'SET_ERROR';\n\nexport const setError = (isError: boolean) => ({\n  type: SET_ERROR,\n  isError,\n});\n","import { IErrorMessage } from '../../interface/interface';\nimport { SET_ERROR } from './actions';\n\nexport const getError = (state: boolean) => state;\n\nconst errorMessageReducer = (isError = false, action:IErrorMessage) => {\n  switch (action.type) {\n    case  SET_ERROR:\n      return action.isError;\n\n    default:\n      return isError;\n  }\n}\n\nexport default errorMessageReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { IState } from '../interface/interface';\n\nimport artCollectionsReducer, *as selectorsArtCollections from './artCollectionsReducer/index';\nimport loadingArtItemsReducer, *as selectorsLoadingArtItems from './loadingArtItemsReducer/index';\nimport btnListReducer, *as selectorsBtnList from './btnListReducer/index';\nimport loadReducer, *as selectorsIsLoading from './loadReducer/index';\nimport infoReducer, * as selectorsInfo from './infoReducer/index';\nimport favoriteReducer, * as selectorsFavorite from './favoriteReducer/index';\nimport favoriteListReducer, * as selectorsFavoriteList from './favoriteListReducer/index';\nimport modalWindowReducer, * as selectorsActiveModal from './modalWindowReduser/index';\nimport errorMessageReducer, * as selectorsError from './errorMessageReducer/index';\n\nexport const getError = (state: IState) => selectorsError\n  .getError(state.isError);\n\nexport const getActiveModal = (state: IState) => selectorsActiveModal\n  .getActiveModal(state.isActiveModal);\n\nexport const getFavoriteList = (state: IState) => selectorsFavoriteList\n  .getFavoriteList(state.isFavoriteList);\n\nexport const getFavorite = (state: IState) => selectorsFavorite.getFavorite(state.isFavorite);\n\nexport const getInfo = (state: any) => selectorsInfo\n  .getInfo(state.info);\n\nexport const getIsLoading = (state: IState) => selectorsIsLoading\n  .getIsLoading(state.isLoading);\n\nexport const getBtnList = (state: IState) => {\n  const buttonList = selectorsBtnList.getBtnList(state.btnList);\n\n  buttonList.btnList.forEach((item: HTMLDivElement) => {\n    if (+item.innerHTML === buttonList.btnText) {\n      item.classList.add('active-btn');\n    } else {\n      item.classList.remove('active-btn');\n    }\n  });\n};\n\nexport const getLoadingArtItems = (state: IState) => selectorsLoadingArtItems\n  .getLoadingArtItems(state.loadingArtItems);\n\nexport const getArtCollections = (state: IState) => selectorsArtCollections\n  .getArtCollections(state.artCollections);\n\nconst rootReducer = combineReducers({\n  artCollections: artCollectionsReducer,\n  loadingArtItems: loadingArtItemsReducer,\n  btnList: btnListReducer,\n  isLoading: loadReducer,\n  info: infoReducer,\n  isFavorite: favoriteReducer,\n  isFavoriteList: favoriteListReducer,\n  isActiveModal: modalWindowReducer,\n  isError: errorMessageReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nexport default store;\n","import React from 'react';\n\nexport const LazyLoadingImg: React.FC = () => (\n  <img\n    className=\"lazy-img\"\n    src=\"./img/unnamed.png\"\n    alt=\"Loading unnamed\"\n  />\n);\n","import axios from 'axios';\n\nconst BASE_URL = 'https://www.rijksmuseum.nl/api/en/collection?key=a7LmWCcH';\n\nconst instance = axios.create({\n  responseType: 'json',\n});\n\nexport const getArtCollections = (\n  currentPage: number,\n  pageSize: number,\n  query: string,\n  selectValue: string\n) => instance\n  .get(`${BASE_URL}&s=${selectValue}&ps=${pageSize}&p=${currentPage}&involvedMaker=${query}`)\n  .then(resp => resp.data);\n\nexport const getInfo = (infoId: string) => instance\n  .get(`https://www.rijksmuseum.nl/api/en/collection/${infoId}?key=a7LmWCcH`)\n  .then(resp => resp.data);\n","import { getArtCollections, getInfo } from '../../api/api';\nimport {setArtCollections} from '../artCollectionsReducer/actions';\nimport { setLoading } from '../loadReducer/actions';\nimport { setInfo } from '../infoReducer/actions';\nimport { setError } from '../errorMessageReducer/actions';\n\nexport const loadingArtCollections = (currentPage: number, pageSize: number, query: string, selectValue: string) => {\n  return (dispatch: (arg: { type: string }) => void) => {\n    dispatch(setLoading(true));\n    getArtCollections(currentPage, pageSize, query, selectValue)\n      .then(async data => {\n        dispatch(await setArtCollections(data));\n        dispatch(setLoading(false));\n      });\n  }\n};\n\nexport const loadInfo = (infoId: string) => (dispatch: (arg: { type: string }) => void) => {\n  // dispatch(setLoading(true));\n  getInfo(infoId).then(async (data) => {\n    dispatch(await setInfo(data));\n    // dispatch(setLoading(false));\n  }).catch(() => {\n    dispatch(setError(true));\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport { Link } from 'react-router-dom';\nimport { IArt, IState, IArtObjects } from \"../../interface/interface\";\nimport { setFavorite } from \"../../store/favoriteReducer/actions\";\nimport { setFavoriteItem } from \"../../store/favoriteListReducer/actions\";\nimport { setActionModal } from \"../../store/modalWindowReduser/actions\";\nimport { LazyLoadingImg } from \"../LazyLoadingImg/LazyLoadingImg\";\nimport * as selectors from \"../../store/store\";\nimport { loadInfo } from '../../store/thunk/thunk';\n\nexport const ArtCollectionsItem: React.FC<IArt> = ({ art }) => {\n  const [isLoadingImg, setLoadingImg] = useState(false);\n  const highSrc = art.headerImage.url;\n  const getFavorite = useSelector((state:IState) => selectors.getFavorite(state));\n  const getFavoriteList = useSelector((state:IState) => selectors.getFavoriteList(state));\n  const artCollections = useSelector((state:IState) => selectors.getArtCollections(state));\n  const dispatch = useDispatch();\n  const { artObjects } = artCollections;\n\n  useEffect(() => {\n    loadHighSrc(highSrc);\n  }, [highSrc]);\n\n  const loadHighSrc = (imageSrc: string) => {\n    const lazyImage = new Image();\n\n    lazyImage.onload = () => {\n      setLoadingImg(true);\n    };\n\n    lazyImage.src = imageSrc;\n  };\n\n  const handleFavoriteClick = (e: React.MouseEvent<HTMLButtonElement>, id: string) => {\n    e.preventDefault();\n\n    const hasLike = getFavorite.findIndex((item: string) => item === id);\n\n    if (hasLike === -1) {\n      dispatch(setFavorite([...getFavorite, id]));\n    } else {\n      dispatch(setFavorite([...getFavorite.filter((item: string) => item !== id)]));\n    }\n\n    const title = artObjects.filter((item: IArtObjects) => item.objectNumber === id)\n      .map(item => item.title);\n\n    const url = artObjects.filter((item: IArtObjects) => item.objectNumber === id)\n      .map(item => item.webImage.url);\n\n    const addNewFavorite = {\n      id,\n      title,\n      url,\n    };\n\n    dispatch(setFavoriteItem([...getFavoriteList, addNewFavorite]));\n  }\n\n  const handleClickModal = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>, id: string) => {\n    e.preventDefault();\n\n    dispatch(setActionModal(true));\n    dispatch(loadInfo(id));\n  }\n\n  return (\n    <>\n      {\n        isLoadingImg ? (\n          <article className=\"collection__item\">\n            <button\n              className=\"favorite-btn\"\n              onClick={(e) =>\n                handleFavoriteClick(e, art.objectNumber)\n              }\n            >\n              {\n                getFavorite.includes(art.objectNumber) ? (\n                  <span className=\"icon-heart active-favorite\" />\n                ) : (\n                  <span className=\"icon-heart\" />\n                )\n              }\n            </button>\n\n            <Link\n              to=\"/\"\n              className=\"collection__link\"\n              style={{ backgroundImage: `url(${highSrc})` }}\n              onClick={(e) => handleClickModal(e, art.objectNumber)}\n            >\n              <p className=\"collection__text\">{art.longTitle}</p>\n            </Link>\n          </article>\n        ) : (\n          <LazyLoadingImg />\n        )\n      }\n    </>\n  );\n}\n","import React from 'react';\n\nimport { IArtCollections } from '../../interface/interface';\nimport { ArtCollectionsItem } from '../ArtCollectionsItem/ArtCollectionsItem';\n\ntype PropsArtCollections = {\n  artCollections: IArtCollections;\n}\n\nexport const ArtCollectionsList: React.FC<PropsArtCollections> = ({ artCollections }) => {\n  const { artObjects } = artCollections;\n\n  return (\n    <section className=\"collection\">\n      {\n        artObjects && !artObjects.length ? (\n          <p className=\"error-message\">No search information, reload the page!!!</p>\n        ) : (\n          <div className=\"collection__list\">\n            {\n              artObjects && artObjects.map(art => (\n                <ArtCollectionsItem key={art.id} art={art} />\n              ))\n            }\n          </div>\n        )\n      }\n    </section>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { IState } from '../../interface/interface';\nimport *as selectors from '../../store/store';\nimport { ArtCollectionsList } from '../ArtCollectionsList/ArtCollectionsList';\nimport { setTotalCount } from \"../../store/loadingArtItemsReducer/actions\";\n\nexport const ArtCollections = () => {\n  const artCollections = useSelector((state:IState) => selectors.getArtCollections(state));\n  const isLoading = useSelector((state:IState) => selectors.getIsLoading(state));\n  const maxGetElementsFromServer = 10000;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const totalCount = artCollections.count > maxGetElementsFromServer ? maxGetElementsFromServer : artCollections.count;\n\n    dispatch(setTotalCount(totalCount));\n\n  }, [artCollections]);\n\n  return (\n    <>\n      {\n        !isLoading ? (\n          <main className=\"wrapper\">\n            <ArtCollectionsList artCollections={artCollections} />\n          </main>\n        ) : (\n          <div className=\"loader-box\">\n            <div className=\"loader\">Loading...</div>\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import React from 'react';\n\ntype PropsResultSearchOrSort = {\n  handleSubmit(e: React.FormEvent<HTMLFormElement>): void;\n  handleSelect(e: React.ChangeEvent<HTMLSelectElement>): void;\n  setQuery(e: string): void;\n  isQuery: string,\n}\n\nexport const ResultSearchOrSort: React.FC<PropsResultSearchOrSort> = (\n  {\n    handleSubmit,\n    handleSelect,\n    isQuery,\n    setQuery\n  }) => (\n  <section className=\"service\">\n    <select\n      name=\"s\"\n      className=\"select-sort\"\n      onChange={(e) => handleSelect(e)}\n    >\n      <option value=\"\">Order by:</option>\n      <option value=\"relevance\">Relevance</option>\n      <option value=\"objecttype\">Object type</option>\n      <option value=\"chronologic\">Chronological old {\">\"} new</option>\n    </select>\n\n    <form\n      action=\"#\"\n      onSubmit={(e) => handleSubmit(e)}\n      className=\"form\"\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Search keyword...\"\n        value={isQuery}\n        onChange={(e) => setQuery(e.target.value)}\n        className=\"form__input\"\n      />\n\n      <button\n        type=\"submit\"\n        className=\"form__button\"\n      >\n        Search\n      </button>\n    </form>\n  </section>\n);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { IState } from \"../../interface/interface\";\nimport * as selectors from \"../../store/store\";\nimport { setSearch, setSelectValue } from '../../store/loadingArtItemsReducer/actions';\nimport { ResultSearchOrSort } from '../ResultSearchOrSort/ResultSearchOrSort';\n\nexport const Header = () => {\n  const [isQuery, setQuery] = useState('');\n  const getFavorite = useSelector((state:IState) => selectors.getFavorite(state));\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    dispatch(setSearch(isQuery));\n    setQuery('');\n  };\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setSelectValue(e.target.value));\n  }\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrap\">\n        <Link to=\"/\" className=\"header__logo\">Rijksmuseum</Link>\n\n        <ResultSearchOrSort\n          handleSubmit={handleSubmit}\n          handleSelect={handleSelect}\n          setQuery={setQuery}\n          isQuery={isQuery}\n        />\n\n        <Link to=\"/favorite\" className=\"header__link\">\n          <span className=\"header__link--count\">\n            {getFavorite.length}\n          </span>\n        </Link>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { IState } from '../../interface/interface';\nimport * as selectors from '../../store/store';\nimport {setActionModal} from \"../../store/modalWindowReduser/actions\";\nimport { setError } from \"../../store/errorMessageReducer/actions\";\n\nexport const ModalWindow = () => {\n  const info = useSelector((state:IState) => selectors.getInfo(state));\n  const isActiveModal = useSelector((state:IState) => selectors.getActiveModal(state));\n  const isError = useSelector((state:IState) => selectors.getError(state));\n  const dispatch = useDispatch();\n  const { artObject } = info;\n\n  const handleClickCloseModal = () => {\n    dispatch(setActionModal(false));\n    dispatch(setError(false));\n  }\n\n  return (\n    <>\n      <div className={isActiveModal ? 'modal-wrapper active-modal-wrap' : 'modal-wrapper'}>\n        <div\n          className=\"modal-window\"\n        >\n          {\n            isError ? (\n              <div className=\"error-wrapper\">\n                <p className=\"error-message\">\n                  Error from server!!!\n                </p>\n\n                <button\n                  type=\"button\"\n                  onClick={handleClickCloseModal}\n                  className=\"modal__btn\"\n                >\n                  Close\n                </button>\n              </div>\n            ) : (\n              artObject && (\n                <section className=\"modal\">\n                  <>\n                    <article className=\"modal__info\">\n                      <img\n                        src={artObject.webImage.url}\n                        alt=\"img\"\n                        className=\"modal__img\"\n                      />\n\n                      <h1 className=\"modal__title\">{artObject.title}</h1>\n\n                      <p className=\"modal__description\">\n                        {artObject.description}\n                      </p>\n                    </article>\n\n                    <div className=\"modal__btn-box\">\n                      <div className=\"modal__btn-box--wrapper\">\n                        <Link\n                          to={`/details`}\n                          className=\"modal__btn modal__btn\"\n                          onClick={handleClickCloseModal}\n                        >\n                          View more\n                          <br />\n                          details\n                        </Link>\n\n                        <button\n                          type=\"button\"\n                          onClick={handleClickCloseModal}\n                          className=\"modal__btn\"\n                        >\n                          Close\n                        </button>\n                      </div>\n                    </div>\n                  </>\n                </section>\n              )\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\n// @ts-ignore\nimport ReactPaginate from 'react-paginate';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IState } from '../../interface/interface';\nimport *as selectors from '../../store/store';\nimport { setButtonList, setButtonText } from '../../store/btnListReducer/actions';\nimport { setCurrentPage, setLoadItemsOnPage } from '../../store/loadingArtItemsReducer/actions';\nimport { loadingArtCollections } from \"../../store/thunk/thunk\";\n\nexport const Footer: React.FC = () => {\n  useSelector((state:IState) => selectors.getBtnList(state));\n  const isLoading = useSelector((state:IState) => selectors.getIsLoading(state));\n  const loadingArtItems = useSelector((state:IState) => selectors.getLoadingArtItems(state));\n  const { currentPage, pageSize, totalPicturesCount, query, selectValue } = loadingArtItems;\n  const dispatch = useDispatch();\n  const pagesCount = Math.ceil(totalPicturesCount / pageSize);\n\n  const handlePageClick = (page:{selected: number}): void => {\n    dispatch(setCurrentPage(page.selected + 1));\n  };\n\n  useEffect(() => {\n    dispatch(loadingArtCollections(currentPage, pageSize, query, selectValue));\n  }, [currentPage, pageSize, query, selectValue, totalPicturesCount]);\n\n  useEffect(() => {\n    dispatch(setButtonList(document.querySelectorAll('.load-items__btn')));\n  }, [dispatch]);\n\n  const handleLoadItem = (e:React.MouseEvent<HTMLButtonElement>) => {\n    const { innerHTML } = e.target as HTMLButtonElement;\n\n    dispatch(setLoadItemsOnPage(+innerHTML));\n  };\n\n  const handlerGetButtonText = (e:React.MouseEvent<HTMLButtonElement>) => {\n    const { innerHTML } = e.target as HTMLButtonElement;\n\n    dispatch(setButtonText(innerHTML));\n  }\n\n  return (\n    <>\n      <footer\n        className={isLoading ? 'hidden footer' : 'footer'}\n      >\n        <ReactPaginate\n          previousLabel=\"<\"\n          nextLabel=\">\"\n          breakLabel=\"...\"\n          breakClassName=\"break-me\"\n          pageCount={pagesCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={(page: { selected: number; }) => handlePageClick(page)}\n          containerClassName=\"pagination\"\n          subContainerClassName=\"pages pagination\"\n          activeClassName=\"active\"\n          initialPage={currentPage - 1}\n        />\n\n        <div className=\"load-items\">\n          <button\n            type=\"button\"\n            className=\"load-items__btn active-btn\"\n            onClick={(e:React.MouseEvent<HTMLButtonElement>) => {\n              handleLoadItem(e);\n              handlerGetButtonText(e);\n            }}\n          >\n            10\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"load-items__btn\"\n            onClick={(e:React.MouseEvent<HTMLButtonElement>) => {\n              handleLoadItem(e);\n              handlerGetButtonText(e);\n            }}\n          >\n            50\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"load-items__btn\"\n            onClick={(e:React.MouseEvent<HTMLButtonElement>) => {\n              handleLoadItem(e);\n              handlerGetButtonText(e);\n            }}\n          >\n            100\n          </button>\n        </div>\n      </footer>\n    </>\n  );\n}\n","import React from 'react';\nimport { ArtCollections } from '../ArtCollections/ArtCollections';\nimport { Header } from \"../Header/Header\";\nimport { ModalWindow } from \"../ModalWindow/ModalWindow\";\nimport { Footer } from \"../Footer/Footer\";\n\nexport const Home = () => (\n  <>\n    <Header />\n    <ArtCollections />\n    <ModalWindow />\n    <Footer />\n  </>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport * as selectors from '../../store/store';\nimport { IState, IDetail } from '../../interface/interface';\n\nexport const Details = () => {\n  const info = useSelector((state: IState) => selectors.getInfo(state));\n  const { artObject } = info;\n\n  return (\n    <section className=\"details\">\n      <div className=\"wrapper\">\n        {\n          !artObject ? (\n            <>\n              <Link\n                to=\"/\"\n                className=\"back\"\n              >\n                <span className=\"icon-point-left icon\" />\n                Back\n              </Link>\n\n              <h1 className=\"error-message\">No results</h1>\n            </>\n          ) : (\n            <>\n              <Link\n                to=\"/\"\n                className=\"back\"\n              >\n                <span className=\"icon-point-left icon\" />\n                Back\n              </Link>\n\n              <h1 className=\"details__title\">{artObject.title}</h1>\n\n              <ul className=\"details__list\">\n                {\n                  artObject.principalMakers.map((detail: IDetail) => (\n                    <div key={detail.dateOfBirth}>\n                      <li className=\"details__item\">\n                      <span className=\"details__item--title\">\n                        Author:\n                      </span>\n\n                        {detail.name}\n                      </li>\n\n                      <li className=\"details__item\">\n                      <span className=\"details__item--title\">\n                        Period of life:\n                      </span>\n\n                        {detail.dateOfBirth}\n                        {' - '}\n                        {detail.dateOfDeath}\n                      </li>\n                    </div>\n                  ))\n                }\n                <li className=\"details__item\">\n                <span className=\"details__item--title\">\n                  Dating:\n                </span>\n\n                  {artObject.dating.presentingDate}\n                </li>\n\n                <li className=\"details__item\">\n                <span className=\"details__item--title\">\n                  Way of drawing:\n                </span>\n\n                  {artObject.physicalMedium}\n                </li>\n              </ul>\n\n              <article className=\"details__content\">\n                <img\n                  src={artObject.webImage.url}\n                  alt=\"img\"\n                  className=\"details__img\"\n                />\n\n                <p className=\"details__description\">\n                  {artObject.label.description}\n                </p>\n              </article>\n            </>\n          )\n        }\n      </div>\n    </section>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { IState } from \"../../interface/interface\";\nimport * as selectors from \"../../store/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFavorite } from '../../store/favoriteReducer/actions';\nimport { setFavoriteItem } from '../../store/favoriteListReducer/actions';\n\nexport const Favorite = () => {\n  const getFavorite = useSelector((state:IState) => selectors.getFavorite(state));\n  const getFavoriteList = useSelector((state:IState) => selectors.getFavoriteList(state));\n  const dispatch = useDispatch();\n\n  const handleDeleteFavorite = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, id: string) => {\n    e.preventDefault();\n\n    dispatch(setFavorite([...getFavorite.filter((item: any) => item !== id)]));\n  }\n\n  useEffect(() => {\n    dispatch(\n      setFavoriteItem(\n        [...getFavoriteList.filter((item: any) => getFavorite\n          .includes(item.id))\n      ])\n    );\n  }, []);\n\n  return (\n    <section className=\"favorite\">\n      <Link\n        to=\"/\"\n        className=\"back favorite__back\"\n      >\n        <span className=\"icon-point-left icon\" />\n        Back\n      </Link>\n      {\n        getFavoriteList.filter((item: any)=> getFavorite.includes(item.id))\n          .map((item: any) => (\n           <ul className=\"favorite__list\" key={item.id}>\n              <li className=\"favorite__item\">\n              <div className=\"favorite__header\">\n                <h2 className=\"favorite__title\">{item.title}</h2>\n\n                <button\n                  className=\"favorite__btn\"\n                  type=\"button\"\n                  onClick={(e) =>\n                    handleDeleteFavorite(e, item.id)}\n                >\n                  <span className=\"icon-cross\" />\n                </button>\n              </div>\n\n              <div className=\"favorite__container\">\n                <img\n                  className=\"favorite__img\"\n                  src={`${item.url}`}\n                  alt={`${item.title}`}\n                />\n              </div>\n            </li>\n           </ul>\n        ))\n      }\n    </section>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from './components/Home/Home';\nimport { Details } from './components/Details/Details';\nimport { Favorite } from './components/Favorite/Favorite';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/favorite\" component={Favorite} />\n      <Route path=\"/details\" component={Details} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}