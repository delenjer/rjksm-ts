{"version":3,"sources":["store/artCollectionsReducer/index.ts","store/artCollectionsReducer/actions.ts","store/loadingArtItemsReducer/index.ts","store/loadingArtItemsReducer/actions.ts","store/btnListReducer/index.ts","store/btnListReducer/actions.ts","store/loadReducer/actions.ts","store/loadReducer/index.ts","store/infoReducer/actions.ts","store/infoReducer/index.ts","store/favoriteReducer/actions.ts","store/favoriteReducer/index.ts","store/favoriteListReducer/actions.ts","store/favoriteListReducer/index.ts","store/modalWindowReduser/actions.ts","store/modalWindowReduser/index.ts","store/errorMessageReducer/actions.ts","store/errorMessageReducer/index.ts","store/store.ts","api/api.ts","store/thunk/thunk.ts","components/ArtCollectionsItem/ArtCollectionsItem.tsx","components/ArtCollectionsList/ArtCollectionsList.tsx","components/Footer/Footer.tsx","components/ArtCollections/ArtCollections.tsx","components/Header/Header.tsx","components/Home/Home.tsx","components/ModalWindow/ModalWindow.tsx","components/Details/Details.tsx","components/Favorite/Favorite.tsx","App.tsx","index.tsx"],"names":["artCollectionsReducer","artCollections","action","type","artItem","initialState","pageSize","totalPicturesCount","currentPage","query","loadingArtItemsReducer","state","num","title","btnList","btnText","btnListReducer","text","setLoading","isLoading","loadReducer","setInfo","id","infoReducer","info","setFavorite","favoriteReducer","favorite","setFavoriteItem","addNewFavorite","favoriteListReducer","favoriteList","setActionModal","isAction","modalWindowReducer","isActiveModal","setError","isError","errorMessageReducer","getFavoriteList","isFavoriteList","getFavorite","isFavorite","getInfo","getIsLoading","getArtCollections","rootReducer","combineReducers","loadingArtItems","store","createStore","composeWithDevTools","applyMiddleware","thunk","instance","axios","create","responseType","loadingArtCollections","dispatch","get","then","resp","data","a","loadInfo","catch","ArtCollectionsItem","art","useState","highSrc","headerImage","url","useSelector","selectors","useDispatch","artObjects","useEffect","loadHighRes","imageSrc","lazyImage","Image","onload","src","className","onClick","e","preventDefault","hasLike","findIndex","item","filter","objectNumber","map","webImage","handleFavoriteClick","includes","to","style","backgroundImage","longTitle","alt","ArtCollectionsList","length","key","Footer","pagesCount","handlePageClick","buttonList","forEach","innerHTML","classList","add","remove","document","querySelectorAll","handleLoadItem","target","handlerGetButtonText","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page","containerClassName","subContainerClassName","activeClassName","initialPage","ArtCollections","Math","ceil","selected","Header","isQuery","setQuery","onSubmit","handleSubmit","placeholder","value","onChange","Home","ModalWindow","useParams","history","useHistory","artObject","handleClickCloseModal","goBack","description","Details","principalMakers","detail","dateOfBirth","name","dateOfDeath","dating","presentingDate","physicalMedium","label","Favorite","handleDeleteFavorite","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ac490d7.chunk.js","sourcesContent":["import { IActionArtCollections, IArtCollections } from '../../interface/interface';\nimport { SET_ART_COLLECTIONS } from './actions';\n\nexport const getArtCollections = (state: IArtCollections) => state;\n\nconst artCollectionsReducer = (artCollections = {}, action:IActionArtCollections) => {\n  switch (action.type) {\n    case SET_ART_COLLECTIONS:\n      return action.artItem;\n\n    default:\n      return artCollections;\n  }\n}\n\nexport default artCollectionsReducer;\n","import { IActionArtCollections } from '../../interface/interface';\n\nexport const SET_ART_COLLECTIONS = 'SET_ART_COLLECTIONS';\n\nexport const setArtCollections = (artItem:IActionArtCollections) => ({\n  type: SET_ART_COLLECTIONS,\n  artItem,\n});\n","import { IActionSetCurrentPage, ILoadingArtItems } from '../../interface/interface';\nimport { SET_CURRENT_PAGE, SET_LOAD_ITEM, SET_KEY_WORD } from './actions';\n\nconst initialState = {\n  pageSize: 10,\n  totalPicturesCount: 10000,\n  currentPage: 1,\n  query: '',\n};\n\nexport const getLoadingArtItems = (state: ILoadingArtItems) => state;\n\nconst loadingArtItemsReducer = (state = initialState, action:IActionSetCurrentPage) => {\n  switch (action.type) {\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.num,\n      };\n\n    case SET_LOAD_ITEM:\n      return {\n        ...state,\n        pageSize: action.num,\n      };\n\n    case SET_KEY_WORD:\n      return {\n        ...state,\n        query: action.title,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default loadingArtItemsReducer;\n","export const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_LOAD_ITEM = 'SET_LOAD_ITEM';\nexport const SET_KEY_WORD = 'SET_KEY_WORD';\n\nexport const setCurrentPage = (num: number) => ({\n  type: SET_CURRENT_PAGE,\n  num,\n});\n\nexport const setLoadItemsOnPage = (num: number) => ({\n  type: SET_LOAD_ITEM,\n  num,\n});\n\nexport const setSearch = (title: string) => ({\n  type: SET_KEY_WORD,\n  title,\n});\n","import { SET_BUTTON_LIST, SET_BUTTON_TEXT } from './actions';\n\nconst initialState = {\n  btnList: [],\n  btnText: 10,\n};\n\nexport const getBtnList = (state: any) => state;\n\nconst btnListReducer = (state = initialState, action:any) => {\n  switch (action.type) {\n    case SET_BUTTON_LIST:\n      return {\n        ...state,\n        btnList: action.btnList,\n      };\n\n    case SET_BUTTON_TEXT:\n      return {\n        ...state,\n        btnText: +action.text,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default btnListReducer;\n","export const SET_BUTTON_LIST = 'SET_BUTTON_LIST';\nexport const SET_BUTTON_TEXT = 'SET_BUTTON_TEXT';\n\nexport const setButtonList = (btnList: any) => ({\n  type: SET_BUTTON_LIST,\n  btnList,\n});\n\nexport const setButtonText = (text: string) => ({\n  type: SET_BUTTON_TEXT,\n  text,\n});\n","export const SET_LOADING = 'SET_LOADING';\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: SET_LOADING,\n  isLoading,\n});\n","import {IActionIsLoading} from '../../interface/interface';\nimport {SET_LOADING} from './actions';\n\nexport const getIsLoading = (state: boolean) => state;\n\nconst loadReducer = (isLoading = false, action:IActionIsLoading) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return action.isLoading;\n\n    default:\n      return isLoading;\n  }\n}\n\nexport default loadReducer;\n","export const SET_INFO = 'SET_INFO';\n\nexport const setInfo = (id: string) => ({\n  type: SET_INFO,\n  id,\n});\n","import { IActionInfo } from '../../interface/interface';\nimport { SET_INFO } from './actions';\n\nexport const getInfo = (state: any) => state;\n\nconst infoReducer = (info = [], action:IActionInfo) => {\n  switch (action.type) {\n    case SET_INFO:\n      return action.id;\n\n    default:\n      return info;\n  }\n};\n\nexport default infoReducer;\n","export const SET_FAVORITE = 'SET_FAVORITE';\n\nexport const setFavorite = (id: string[]) => ({\n  type: SET_FAVORITE,\n  id,\n});\n","import { IFavorite } from '../../interface/interface';\nimport { SET_FAVORITE } from './actions';\n\nexport const getFavorite = (state: string[]) => state;\n\nconst favoriteReducer = (favorite: string[] = [], action:IFavorite) => {\n  switch (action.type) {\n    case SET_FAVORITE:\n      return action.id;\n\n    default:\n      return favorite;\n  }\n}\n\nexport default favoriteReducer;\n","import { IFavoriteList } from '../../interface/interface';\n\nexport const SET_FAVORITE_CONTENT = 'SET_FAVORITE_CONTENT';\n\nexport const setFavoriteItem = (addNewFavorite: (IFavoriteList[])) => ({\n  type: SET_FAVORITE_CONTENT,\n  addNewFavorite,\n});\n","import { IFavorite, IFavoriteList } from '../../interface/interface';\nimport { SET_FAVORITE_CONTENT } from './actions';\n\nexport const getFavoriteList = (state: IFavoriteList[]) => state;\n\nconst favoriteListReducer = (favoriteList: IFavoriteList[] = [], action:IFavorite) => {\n  switch (action.type) {\n    case SET_FAVORITE_CONTENT:\n      return action.addNewFavorite;\n\n    default:\n      return favoriteList;\n  }\n}\n\nexport default favoriteListReducer;\n","export const SET_ACTION = 'SET_ACTION';\n\nexport const setActionModal = (isAction: boolean) => ({\n  type: SET_ACTION,\n  isAction,\n});\n","import { IActionModal } from '../../interface/interface';\nimport {SET_ACTION} from './actions';\n\nexport const getActiveModal = (state: boolean) => state;\n\nconst modalWindowReducer = (isActiveModal = false, action:IActionModal) => {\n  switch (action.type) {\n    case SET_ACTION:\n      return action.isAction;\n\n    default:\n      return isActiveModal;\n  }\n}\n\nexport default modalWindowReducer;\n","export const SET_ERROR = 'SET_ERROR';\n\nexport const setError = (isError: boolean) => ({\n  type: SET_ERROR,\n  isError,\n});\n","import { IErrorMessage } from '../../interface/interface';\nimport { SET_ERROR } from './actions';\n\nexport const getError = (state: boolean) => state;\n\nconst errorMessageReducer = (isError = false, action:IErrorMessage) => {\n  switch (action.type) {\n    case  SET_ERROR:\n      return action.isError;\n\n    default:\n      return isError;\n  }\n}\n\nexport default errorMessageReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { IState } from '../interface/interface';\n\nimport artCollectionsReducer, *as selectorsArtCollections from './artCollectionsReducer/index';\nimport loadingArtItemsReducer, *as selectorsLoadingArtItems from './loadingArtItemsReducer/index';\nimport btnListReducer, *as selectorsBtnList from './btnListReducer/index';\nimport loadReducer, *as selectorsIsLoading from './loadReducer/index';\nimport infoReducer, * as selectorsInfo from './infoReducer/index';\nimport favoriteReducer, * as selectorsFavorite from './favoriteReducer/index';\nimport favoriteListReducer, * as selectorsFavoriteList from './favoriteListReducer/index';\nimport modalWindowReducer, * as selectorsActiveModal from './modalWindowReduser/index';\nimport errorMessageReducer, * as selectorsError from './errorMessageReducer/index';\n\nexport const getError = (state: IState) => selectorsError\n  .getError(state.isError);\n\nexport const getActiveModal = (state: IState) => selectorsActiveModal\n  .getActiveModal(state.isActiveModal);\n\nexport const getFavoriteList = (state: IState) => selectorsFavoriteList\n  .getFavoriteList(state.isFavoriteList);\n\nexport const getFavorite = (state: IState) => selectorsFavorite.getFavorite(state.isFavorite);\n\nexport const getInfo = (state: IState) => selectorsInfo\n  .getInfo(state.info);\n\nexport const getIsLoading = (state: IState) => selectorsIsLoading\n  .getIsLoading(state.isLoading);\n\nexport const getBtnList = (state: IState) => {\n  const buttonList = selectorsBtnList.getBtnList(state.btnList);\n\n  buttonList.btnList.forEach((item: HTMLDivElement) => {\n    if (+item.innerHTML === buttonList.btnText) {\n      item.classList.add('active-btn');\n    } else {\n      item.classList.remove('active-btn');\n    }\n  });\n};\n\nexport const getLoadingArtItems = (state: IState) => selectorsLoadingArtItems\n  .getLoadingArtItems(state.loadingArtItems);\n\nexport const getArtCollections = (state: IState) => selectorsArtCollections\n  .getArtCollections(state.artCollections);\n\nconst rootReducer = combineReducers({\n  artCollections: artCollectionsReducer,\n  loadingArtItems: loadingArtItemsReducer,\n  btnList: btnListReducer,\n  isLoading: loadReducer,\n  info: infoReducer,\n  isFavorite: favoriteReducer,\n  isFavoriteList: favoriteListReducer,\n  isActiveModal: modalWindowReducer,\n  isError: errorMessageReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nexport default store;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://www.rijksmuseum.nl/api/en/collection?key=a7LmWCcH';\n\nconst instance = axios.create({\n  responseType: 'json',\n});\n\nexport const getArtCollections = (currentPage: number, pageSize: number, query: string) => instance\n  .get(`${BASE_URL}&ps=${pageSize}&p=${currentPage}&involvedMaker=${query}`)\n  .then(resp => resp.data);\n\nexport const getInfo = (id: string) => instance\n  .get(`https://www.rijksmuseum.nl/api/en/collection/${id}?key=a7LmWCcH`)\n  .then(resp => resp.data);\n","import { getArtCollections, getInfo } from '../../api/api';\nimport {setArtCollections} from '../artCollectionsReducer/actions';\nimport { setLoading } from '../loadReducer/actions';\nimport { setInfo } from '../infoReducer/actions';\nimport { setError } from '../errorMessageReducer/actions';\n\nexport const loadingArtCollections = (currentPage: number, pageSize: number, query: string) => {\n  return (dispatch: (arg: { type: string }) => void) => {\n    dispatch(setLoading(true));\n    getArtCollections(currentPage, pageSize, query)\n      .then(async data => {\n        dispatch(await setArtCollections(data));\n        dispatch(setLoading(false));\n      });\n  }\n};\n\nexport const loadInfo = (id: string) => (dispatch: (arg: { type: string }) => void) => {\n  dispatch(setLoading(true));\n  getInfo(id).then(async (data) => {\n    dispatch(await setInfo(data));\n    dispatch(setLoading(false));\n  }).catch(() => {\n    dispatch(setError(true));\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport { Link } from 'react-router-dom';\nimport { IArt, IState, IArtObjects } from \"../../interface/interface\";\nimport { setFavorite } from \"../../store/favoriteReducer/actions\";\nimport { setFavoriteItem } from \"../../store/favoriteListReducer/actions\";\nimport { setActionModal } from \"../../store/modalWindowReduser/actions\";\nimport * as selectors from \"../../store/store\";\n\nexport const ArtCollectionsItem: React.FC<IArt> = ({ art }) => {\n  const [isLoading, setLoading] = useState(false);\n  const highSrc = art.headerImage.url;\n  const getFavorite = useSelector((state:IState) => selectors.getFavorite(state));\n  const getFavoriteList = useSelector((state:IState) => selectors.getFavoriteList(state));\n  const artCollections = useSelector((state:IState) => selectors.getArtCollections(state));\n  const dispatch = useDispatch();\n  const { artObjects } = artCollections;\n\n  useEffect(() => {\n    loadHighRes(highSrc);\n  }, [highSrc]);\n\n  const loadHighRes = (imageSrc: string) => {\n    const lazyImage = new Image();\n\n    lazyImage.onload = () => {\n      setLoading(true);\n    };\n\n    lazyImage.src = imageSrc;\n  };\n\n  const handleFavoriteClick = (e: React.MouseEvent<HTMLButtonElement>, id: string) => {\n    e.preventDefault();\n\n    const hasLike = getFavorite.findIndex((item: string) => item === id);\n\n    if (hasLike === -1) {\n      dispatch(setFavorite([...getFavorite, id]));\n    } else {\n      dispatch(setFavorite([...getFavorite.filter((item: string) => item !== id)]));\n    }\n\n    const title = artObjects.filter((item: IArtObjects) => item.objectNumber === id)\n      .map(item => item.title);\n\n    const url = artObjects.filter((item: IArtObjects) => item.objectNumber === id)\n      .map(item => item.webImage.url);\n\n    const addNewFavorite = {\n      id,\n      title,\n      url,\n    };\n\n    dispatch(setFavoriteItem([...getFavoriteList, addNewFavorite]));\n  }\n\n  const handleClickModal = () => {\n    dispatch(setActionModal(true));\n  }\n\n  return (\n    <>\n      {\n        isLoading ? (\n          <article className=\"collection__item\">\n            <button\n              className=\"favorite-btn\"\n              onClick={(e) =>\n                handleFavoriteClick(e, art.objectNumber)\n              }\n            >\n              {\n                getFavorite.includes(art.objectNumber) ? (\n                  <span className=\"icon-heart active-favorite\" />\n                ) : (\n                  <span className=\"icon-heart\" />\n                )\n              }\n            </button>\n\n            <Link\n              to={`/${art.objectNumber}/modal`}\n              className=\"collection__link\"\n              style={{ backgroundImage: `url(${highSrc})` }}\n              onClick={handleClickModal}\n            >\n              <p className=\"collection__text\">{art.longTitle}</p>\n            </Link>\n          </article>\n        ) : (\n          <img\n            className=\"lazy-img\"\n            src=\"./img/unnamed.png\"\n            alt=\"Loading unnamed\"\n          />\n        )\n      }\n    </>\n  );\n}\n","import React from 'react';\n\nimport { IArtCollections } from '../../interface/interface';\nimport { ArtCollectionsItem } from '../ArtCollectionsItem/ArtCollectionsItem';\n\ntype PropsArtCollections = {\n  artCollections: IArtCollections;\n}\n\nexport const ArtCollectionsList: React.FC<PropsArtCollections> = ({ artCollections }) => {\n  const { artObjects } = artCollections;\n\n  return (\n    <section className=\"collection\">\n      {\n        artObjects && !artObjects.length ? (\n          <p className=\"error-message\">No search information, reload the page!!!</p>\n        ) : (\n          <div className=\"collection__list\">\n            {\n              artObjects && artObjects.map(art => (\n                <ArtCollectionsItem key={art.id} art={art} />\n              ))\n            }\n          </div>\n        )\n      }\n    </section>\n  );\n};\n","import React, { useEffect } from 'react';\n// @ts-ignore\nimport ReactPaginate from 'react-paginate';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IState } from '../../interface/interface';\nimport *as selectors from '../../store/store';\nimport { setButtonList, setButtonText } from '../../store/btnListReducer/actions';\nimport { setLoadItemsOnPage } from '../../store/loadingArtItemsReducer/actions';\n\ntype PropsFooter = {\n  pagesCount: number;\n  currentPage: number;\n  isLoading: boolean;\n  handlePageClick(page:{selected: number}): void;\n}\n\nexport const Footer: React.FC<PropsFooter> = ({ pagesCount, currentPage, handlePageClick, isLoading }) => {\n  useSelector((state: IState) => selectors.getBtnList(state));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setButtonList(document.querySelectorAll('.load-items__btn')));\n  }, [dispatch]);\n\n  const handleLoadItem = (e:React.MouseEvent<HTMLButtonElement>) => {\n    const { innerHTML } = e.target as HTMLButtonElement;\n\n    dispatch(setLoadItemsOnPage(+innerHTML));\n  };\n\n  const handlerGetButtonText = (e:React.MouseEvent<HTMLButtonElement>) => {\n    const { innerHTML } = e.target as HTMLButtonElement;\n\n    dispatch(setButtonText(innerHTML));\n  }\n\n  return (\n    <>\n      <footer\n        className={isLoading ? 'hidden footer' : 'footer'}\n      >\n        <ReactPaginate\n          previousLabel=\"<\"\n          nextLabel=\">\"\n          breakLabel=\"...\"\n          breakClassName=\"break-me\"\n          pageCount={pagesCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={(page: { selected: number; }) => handlePageClick(page)}\n          containerClassName=\"pagination\"\n          subContainerClassName=\"pages pagination\"\n          activeClassName=\"active\"\n          initialPage={currentPage - 1}\n        />\n\n        <div className=\"load-items\">\n          <button\n            type=\"button\"\n            className=\"load-items__btn active-btn\"\n            onClick={(e:React.MouseEvent<HTMLButtonElement>) => {\n              handleLoadItem(e);\n              handlerGetButtonText(e);\n            }}\n          >\n            10\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"load-items__btn\"\n            onClick={(e:React.MouseEvent<HTMLButtonElement>) => {\n              handleLoadItem(e);\n              handlerGetButtonText(e);\n            }}\n          >\n            50\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"load-items__btn\"\n            onClick={(e:React.MouseEvent<HTMLButtonElement>) => {\n              handleLoadItem(e);\n              handlerGetButtonText(e);\n            }}\n          >\n            100\n          </button>\n        </div>\n      </footer>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { IState } from '../../interface/interface';\nimport *as selectors from '../../store/store';\nimport { loadingArtCollections } from '../../store/thunk/thunk';\nimport { setCurrentPage } from '../../store/loadingArtItemsReducer/actions';\n\nimport { ArtCollectionsList } from '../ArtCollectionsList/ArtCollectionsList';\nimport { Footer } from '../Footer/Footer';\n\nexport const ArtCollections: React.FC = () => {\n  const artCollections = useSelector((state:IState) => selectors.getArtCollections(state));\n  const loadingArtItems = useSelector((state:IState) => selectors.getLoadingArtItems(state));\n  const isLoading = useSelector((state:IState) => selectors.getIsLoading(state));\n  const { currentPage, pageSize, totalPicturesCount, query } = loadingArtItems;\n  const pagesCount = Math.ceil(totalPicturesCount / pageSize);\n  const dispatch = useDispatch();\n\n  const handlePageClick = (page:{selected: number}): void => {\n    dispatch(setCurrentPage(page.selected + 1));\n  };\n\n  useEffect(() => {\n    dispatch(loadingArtCollections(currentPage, pageSize, query));\n  }, [currentPage, pageSize, query, dispatch]);\n\n  return (\n    <>\n      {\n        !isLoading ? (\n          <main className=\"wrapper\">\n            <ArtCollectionsList artCollections={artCollections} />\n          </main>\n        ) : (\n          <div className=\"loader-box\">\n            <div className=\"loader\">Loading...</div>\n          </div>\n        )\n      }\n\n      <Footer\n        isLoading={isLoading}\n        pagesCount={pagesCount}\n        handlePageClick={handlePageClick}\n        currentPage={currentPage}\n      />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { IState } from \"../../interface/interface\";\nimport * as selectors from \"../../store/store\";\nimport { setSearch } from '../../store/loadingArtItemsReducer/actions';\n\nexport const Header = () => {\n  const [isQuery, setQuery] = useState('');\n  const getFavorite = useSelector((state:IState) => selectors.getFavorite(state));\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    dispatch(setSearch(isQuery));\n    setQuery('');\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrap\">\n        <Link to=\"/\" className=\"header__logo\">Rijksmuseum</Link>\n\n        <form\n          action=\"#\"\n          onSubmit={(e) => handleSubmit(e)}\n          className=\"form\"\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search keyword...\"\n            value={isQuery}\n            onChange={(e) => setQuery(e.target.value)}\n            className=\"form__input\"\n          />\n\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n          >\n            Search\n          </button>\n        </form>\n\n        <Link to=\"/favorite\" className=\"header__link\">\n          <span className=\"header__link--count\">\n            {getFavorite.length}\n          </span>\n        </Link>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { ArtCollections } from '../ArtCollections/ArtCollections';\nimport { Header } from \"../Header/Header\";\n// import { ModalWindow } from \"../ModalWindow/ModalWindow\";\n\nexport const Home = () => (\n  <>\n    <Header />\n    <ArtCollections />\n  </>\n);\n","import React, { useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IState } from '../../interface/interface';\nimport * as selectors from '../../store/store';\nimport { loadInfo } from '../../store/thunk/thunk';\nimport { Home } from \"../Home/Home\";\nimport {setActionModal} from \"../../store/modalWindowReduser/actions\";\nimport { setError } from \"../../store/errorMessageReducer/actions\";\n\nexport const ModalWindow = () => {\n  const info = useSelector((state:IState) => selectors.getInfo(state));\n  const isActiveModal = useSelector((state:IState) => selectors.getActiveModal(state));\n  const isLoading = useSelector((state:IState) => selectors.getIsLoading(state));\n  const isError = useSelector((state:IState) => selectors.getError(state));\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const history = useHistory();\n  const { artObject } = info;\n\n  useEffect(() => {\n    dispatch(loadInfo(id));\n  }, [id, dispatch]);\n\n  const handleClickCloseModal = () => {\n    dispatch(setActionModal(false));\n    dispatch(setError(false));\n  }\n\n  return (\n    <>\n      <Home />\n\n      <div className={isActiveModal ? 'modal-wrapper active-modal-wrap' : 'modal-wrapper'}>\n        <div\n          className=\"modal-window\"\n        >\n          {\n            isError ? (\n              <div className=\"error-wrapper\">\n                <p className=\"error-message\">\n                  Error from server!!!\n                </p>\n\n                <button\n                  type=\"button\"\n                  onClick={\n                    () => {\n                      history.goBack();\n                      handleClickCloseModal();\n                    }\n                  }\n                  className=\"modal__btn\"\n                >\n                  Close\n                </button>\n              </div>\n            ) : (\n              artObject && (\n                <section className=\"modal\">\n                  {\n                    isLoading ? (\n                      <div className=\"load-spinner\">\n                        <p className=\"load-spinner__spinner\">Loading...</p>\n                      </div>\n                    ) : (\n                      <>\n                        <article className=\"modal__info\">\n                          <img\n                            src={artObject.webImage.url}\n                            alt=\"img\"\n                            className=\"modal__img\"\n                          />\n\n                          <h1 className=\"modal__title\">{artObject.title}</h1>\n\n                          <p className=\"modal__description\">\n                            {artObject.description}\n                          </p>\n                        </article>\n\n                        <div className=\"modal__btn-box\">\n                          <div className=\"modal__btn-box--wrapper\">\n                            <Link\n                              to={`/${artObject.objectNumber}`}\n                              className=\"modal__btn modal__btn\"\n                              onClick={handleClickCloseModal}\n                            >\n                              View more\n                              <br />\n                              details\n                            </Link>\n\n                            <button\n                              type=\"button\"\n                              onClick={\n                                () => {\n                                  history.goBack();\n                                  handleClickCloseModal();\n                                }\n                              }\n                              className=\"modal__btn\"\n                            >\n                              Close\n                            </button>\n                          </div>\n                        </div>\n                      </>\n                    )\n                  }\n                </section>\n              )\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as selectors from '../../store/store';\nimport { loadInfo } from '../../store/thunk/thunk';\n\nimport { IState, IDetail } from '../../interface/interface';\n\nexport const Details = () => {\n  const info = useSelector((state: IState) => selectors.getInfo(state));\n  const isLoading = useSelector((state:IState) => selectors.getIsLoading(state));\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { artObject } = info;\n\n  useEffect(() => {\n    dispatch(loadInfo(id));\n  }, [id, dispatch]);\n\n  return (\n    <>\n      {\n        !isLoading ? (\n          <>\n            {\n              artObject && (\n                <section className=\"details\">\n                  <div className=\"wrapper\">\n                    <Link\n                      to=\"/\"\n                      className=\"back\"\n                    >\n                      <span className=\"icon-point-left icon\" />\n                      Back\n                    </Link>\n\n                    <h1 className=\"details__title\">{artObject.title}</h1>\n\n                    <ul className=\"details__list\">\n                      {\n                        artObject.principalMakers.map((detail: IDetail) => (\n                          <div key={detail.dateOfBirth}>\n                            <li className=\"details__item\">\n                              <span className=\"details__item--title\">\n                                Author:\n                              </span>\n\n                              {detail.name}\n                            </li>\n\n                            <li className=\"details__item\">\n                              <span className=\"details__item--title\">\n                                Period of life:\n                              </span>\n\n                              {detail.dateOfBirth}\n                              {' - '}\n                              {detail.dateOfDeath}\n                            </li>\n                          </div>\n                        ))\n                      }\n\n                      <li className=\"details__item\">\n                        <span className=\"details__item--title\">\n                          Dating:\n                        </span>\n\n                        {artObject.dating.presentingDate}\n                      </li>\n\n                      <li className=\"details__item\">\n                        <span className=\"details__item--title\">\n                          Way of drawing:\n                        </span>\n\n                        {artObject.physicalMedium}\n                      </li>\n                    </ul>\n\n                    <article className=\"details__content\">\n                      <img\n                        src={artObject.webImage.url}\n                        alt=\"img\"\n                        className=\"details__img\"\n                      />\n\n                      <p className=\"details__description\">\n                        {artObject.label.description}\n                      </p>\n                    </article>\n                  </div>\n                </section>\n              )\n            }\n          </>\n        ) : (\n          <div className=\"loader\">Loading...</div>\n        )\n      }\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { IState } from \"../../interface/interface\";\nimport * as selectors from \"../../store/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFavorite } from '../../store/favoriteReducer/actions';\nimport { setFavoriteItem } from '../../store/favoriteListReducer/actions';\n\nexport const Favorite = () => {\n  const getFavorite = useSelector((state:IState) => selectors.getFavorite(state));\n  const getFavoriteList = useSelector((state:IState) => selectors.getFavoriteList(state));\n  const dispatch = useDispatch();\n\n  const handleDeleteFavorite = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, id: string) => {\n    e.preventDefault();\n\n    dispatch(setFavorite([...getFavorite.filter((item: any) => item !== id)]));\n  }\n\n  useEffect(() => {\n    dispatch(\n      setFavoriteItem(\n        [...getFavoriteList.filter((item: any) => getFavorite\n          .includes(item.id))\n      ])\n    );\n  }, []);\n\n  return (\n    <section className=\"favorite\">\n      <Link\n        to=\"/\"\n        className=\"back favorite__back\"\n      >\n        <span className=\"icon-point-left icon\" />\n        Back\n      </Link>\n      {\n        getFavoriteList.filter((item: any)=> getFavorite.includes(item.id))\n          .map((item: any) => (\n           <ul className=\"favorite__list\" key={item.id}>\n              <li className=\"favorite__item\">\n              <div className=\"favorite__header\">\n                <h2 className=\"favorite__title\">{item.title}</h2>\n\n                <button\n                  className=\"favorite__btn\"\n                  type=\"button\"\n                  onClick={(e) =>\n                    handleDeleteFavorite(e, item.id)}\n                >\n                  <span className=\"icon-cross\" />\n                </button>\n              </div>\n\n              <div className=\"favorite__container\">\n                <img\n                  className=\"favorite__img\"\n                  src={`${item.url}`}\n                  alt={`${item.title}`}\n                />\n              </div>\n            </li>\n           </ul>\n        ))\n      }\n    </section>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from './components/Home/Home';\nimport { ModalWindow } from './components/ModalWindow/ModalWindow';\nimport { Details } from './components/Details/Details';\nimport { Favorite } from './components/Favorite/Favorite';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/favorite\" component={Favorite} />\n      <Route path=\"/:id/modal\" component={ModalWindow} />\n      <Route path=\"/:id\" component={Details} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}